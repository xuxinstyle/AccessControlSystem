<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.mapper.SuperMapper" >
  <resultMap id="BaseResultMap" type="com.system.po.User" >
    <id column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="PassWord" property="password" jdbcType="VARCHAR" />
    <result column="OpenNum" property="opennum" jdbcType="INTEGER" />
    <result column="LastOpenTime" property="lastopentime" jdbcType="TIMESTAMP" />
    <result column="CsvPath" property="csvpath" jdbcType="VARCHAR" />
    <result column="ImagePath" property="imagepath" jdbcType="VARCHAR" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UserName, PassWord, OpenNum, LastOpenTime, CsvPath, ImagePath, roleName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.system.po.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
     where roleName!='superadmin'
  </select>
   <select id="findByFuzzyName" parameterType="java.lang.String" resultType="com.system.po.User">
  	select *
  	from user
  	<!-- 
  	#{}表示一个占位符即?，可以有效防止sql注入。在使用时不需要关心参数值的类型，mybatis会自动进行java类型和jdbc类型的转换。
  	#{}可以接收简单类型值或pojo属性值，如果传入简单类型值，#{}括号中可以是任意名称。
  	${}可以将parameterType 传入的内容拼接在sql中且不进行jdbc类型转换。 
	${}可以接收简单类型值或pojo属性值，如果传入简单类型值，${}括号中名称只能是value。 -->
  	where username like '%${value}%' and roleName!='superadmin'
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where UserName = #{username,jdbcType=VARCHAR} and roleName!='superadmin'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where UserName = #{username,jdbcType=VARCHAR} and roleName!='superadmin'
  </delete>
  <delete id="deleteByExample" parameterType="com.system.po.UserExample" >
    delete from user
   
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    where roleName!='superadmin'
  </delete>
  <insert id="insert" parameterType="com.system.po.User" >
    insert into user (UserName, PassWord, OpenNum, 
      LastOpenTime, CsvPath, ImagePath, 
      roleName)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{opennum,jdbcType=INTEGER}, 
      #{lastopentime,jdbcType=TIMESTAMP}, #{csvpath,jdbcType=VARCHAR}, #{imagepath,jdbcType=VARCHAR}, 
      #{rolename,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.system.po.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        UserName,
      </if>
      <if test="password != null" >
        PassWord,
      </if>
      <if test="opennum != null" >
        OpenNum,
      </if>
      <if test="lastopentime != null" >
        LastOpenTime,
      </if>
      <if test="csvpath != null" >
        CsvPath,
      </if>
      <if test="imagepath != null" >
        ImagePath,
      </if>
      <if test="rolename != null" >
        roleName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="opennum != null" >
        #{opennum,jdbcType=INTEGER},
      </if>
      <if test="lastopentime != null" >
        #{lastopentime,jdbcType=TIMESTAMP},
      </if>
      <if test="csvpath != null" >
        #{csvpath,jdbcType=VARCHAR},
      </if>
      <if test="imagepath != null" >
        #{imagepath,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.system.po.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    where roleName='user'
    <!-- <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if> -->
    
  </select>
  
  <select id="countAdminByExample" parameterType="com.system.po.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    where roleName='admin'
    <!-- <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if> -->
    
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.username != null" >
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PassWord = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.opennum != null" >
        OpenNum = #{record.opennum,jdbcType=INTEGER},
      </if>
      <if test="record.lastopentime != null" >
        LastOpenTime = #{record.lastopentime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.csvpath != null" >
        CsvPath = #{record.csvpath,jdbcType=VARCHAR},
      </if>
      <if test="record.imagepath != null" >
        ImagePath = #{record.imagepath,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null" >
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set UserName = #{record.username,jdbcType=VARCHAR},
      PassWord = #{record.password,jdbcType=VARCHAR},
      OpenNum = #{record.opennum,jdbcType=INTEGER},
      LastOpenTime = #{record.lastopentime,jdbcType=TIMESTAMP},
      CsvPath = #{record.csvpath,jdbcType=VARCHAR},
      ImagePath = #{record.imagepath,jdbcType=VARCHAR},
      roleName = #{record.rolename,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.po.User" >
    update user
    <set >
      <if test="password != null" >
        PassWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="opennum != null" >
        OpenNum = #{opennum,jdbcType=INTEGER},
      </if>
      <if test="lastopentime != null" >
        LastOpenTime = #{lastopentime,jdbcType=TIMESTAMP},
      </if>
      <if test="csvpath != null" >
        CsvPath = #{csvpath,jdbcType=VARCHAR},
      </if>
      <if test="imagepath != null" >
        ImagePath = #{imagepath,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
    </set>
    where UserName = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.po.User" >
    update user
    set PassWord = #{password,jdbcType=VARCHAR},
      OpenNum = #{opennum,jdbcType=INTEGER},
      LastOpenTime = #{lastopentime,jdbcType=TIMESTAMP},
      CsvPath = #{csvpath,jdbcType=VARCHAR},
      ImagePath = #{imagepath,jdbcType=VARCHAR},
      roleName = #{rolename,jdbcType=VARCHAR}
    where UserName = #{username,jdbcType=VARCHAR}
  </update>
</mapper>